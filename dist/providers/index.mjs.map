{"version":3,"sources":["../../src/providers/index.ts"],"sourcesContent":["import type { AIModel } from '../types';\n\n// Provider configuration with model metadata\nexport const providerConfigs = {\n  openai: {\n    baseURL: 'https://api.openai.com/v1',\n    models: {\n      'gpt-4': { \n        contextWindow: 8192, \n        cost: { input: 0.03, output: 0.06 },\n        description: 'Most capable GPT-4 model'\n      },\n      'gpt-4-turbo': { \n        contextWindow: 128000, \n        cost: { input: 0.01, output: 0.03 },\n        description: 'GPT-4 Turbo with larger context window'\n      },\n      'gpt-4o': { \n        contextWindow: 128000, \n        cost: { input: 0.005, output: 0.015 },\n        description: 'GPT-4 Omni - fastest and most cost-effective'\n      },\n      'gpt-4o-mini': { \n        contextWindow: 128000, \n        cost: { input: 0.00015, output: 0.0006 },\n        description: 'Smaller, faster GPT-4o variant'\n      },\n      'o3': { \n        contextWindow: 200000, \n        cost: { input: 0.06, output: 0.24 },\n        description: 'Latest reasoning model'\n      },\n      'o3-mini': { \n        contextWindow: 200000, \n        cost: { input: 0.015, output: 0.06 },\n        description: 'Smaller o3 variant with faster inference'\n      },\n    }\n  },\n  anthropic: {\n    baseURL: 'https://api.anthropic.com',\n    models: {\n      'claude-4-opus-20250514': { \n        contextWindow: 200000, \n        cost: { input: 0.015, output: 0.075 },\n        description: 'Most capable Claude 4 model'\n      },\n      'claude-4-sonnet-20250514': { \n        contextWindow: 200000, \n        cost: { input: 0.003, output: 0.015 },\n        description: 'Balanced Claude 4 model for most use cases'\n      },\n    }\n  },\n  google: {\n    baseURL: 'https://generativelanguage.googleapis.com/v1beta',\n    models: {\n      'gemini-2.5-pro-preview-06-05': { \n        contextWindow: 2000000, \n        cost: { input: 0.001, output: 0.002 },\n        description: 'Latest Gemini 2.5 Pro preview model'\n      },\n      'gemini-2.5-flash-preview-05-20': { \n        contextWindow: 1000000, \n        cost: { input: 0.0005, output: 0.001 },\n        description: 'Fast Gemini 2.5 Flash preview model'\n      },\n      'gemini-1.5-pro': { \n        contextWindow: 2000000, \n        cost: { input: 0.00125, output: 0.005 },\n        description: 'Gemini 1.5 Pro with large context window'\n      },\n      'gemini-1.5-flash': { \n        contextWindow: 1000000, \n        cost: { input: 0.000075, output: 0.0003 },\n        description: 'Fast and efficient Gemini 1.5 model'\n      },\n    }\n  },\n  'google-vertex': {\n    baseURL: 'https://us-central1-aiplatform.googleapis.com',\n    models: {\n      'gemini-2.5-pro-preview-06-05': { \n        contextWindow: 2000000, \n        cost: { input: 0.001, output: 0.002 },\n        description: 'Latest Gemini 2.5 Pro preview model via Vertex AI'\n      },\n      'gemini-2.5-flash-preview-05-20': { \n        contextWindow: 1000000, \n        cost: { input: 0.0005, output: 0.001 },\n        description: 'Fast Gemini 2.5 Flash preview model via Vertex AI'\n      },\n      'gemini-1.5-pro': { \n        contextWindow: 2000000, \n        cost: { input: 0.00125, output: 0.005 },\n        description: 'Gemini 1.5 Pro via Vertex AI'\n      },\n      'gemini-1.5-flash': { \n        contextWindow: 1000000, \n        cost: { input: 0.000075, output: 0.0003 },\n        description: 'Fast Gemini 1.5 model via Vertex AI'\n      },\n    }\n  },\n  perplexity: {\n    baseURL: 'https://api.perplexity.ai',\n    models: {\n      'llama-3.1-sonar-small-128k-online': { \n        contextWindow: 127072, \n        cost: { input: 0.0002, output: 0.0002 },\n        description: 'Small Llama 3.1 Sonar with online search'\n      },\n      'llama-3.1-sonar-large-128k-online': { \n        contextWindow: 127072, \n        cost: { input: 0.001, output: 0.001 },\n        description: 'Large Llama 3.1 Sonar with online search'\n      },\n      'llama-3.1-sonar-huge-128k-online': { \n        contextWindow: 127072, \n        cost: { input: 0.005, output: 0.005 },\n        description: 'Huge Llama 3.1 Sonar with online search'\n      },\n    }\n  },\n  xai: {\n    baseURL: 'https://api.x.ai/v1',\n    models: {\n      'grok-beta': { \n        contextWindow: 131072, \n        cost: { input: 0.005, output: 0.015 },\n        description: 'Grok conversational AI model'\n      },\n    }\n  },\n};\n\n// Factory functions for creating AI models\nexport function createOpenAIModel(options: {\n  model: string;\n  apiKey?: string;\n  baseURL?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'openai',\n    model: options.model,\n    apiKey: options.apiKey || process.env.OPENAI_API_KEY,\n    baseURL: options.baseURL,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport function createAnthropicModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'anthropic',\n    model: options.model,\n    apiKey: options.apiKey || process.env.ANTHROPIC_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens ?? 1024,\n    topP: options.topP,\n  };\n}\n\nexport function createGoogleModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'google',\n    model: options.model,\n    apiKey: options.apiKey || process.env.GOOGLE_GENERATIVE_AI_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport function createGoogleVertexModel(options: {\n  model: string;\n  project: string;\n  location?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'google-vertex',\n    model: options.model,\n    project: options.project,\n    location: options.location || 'us-central1',\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport function createPerplexityModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'perplexity',\n    model: options.model,\n    apiKey: options.apiKey || process.env.PERPLEXITY_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport function createXAIModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'xai',\n    model: options.model,\n    apiKey: options.apiKey || process.env.XAI_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport function createCustomModel(options: {\n  model: string;\n  apiKey?: string;\n  baseURL: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'custom',\n    model: options.model,\n    apiKey: options.apiKey,\n    baseURL: options.baseURL,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\n// Pre-configured model instances\nexport const openAIModels = {\n  gpt4: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gpt4Turbo: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4-turbo',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gpt4o: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4o',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gpt4oMini: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4o-mini',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  o3: (apiKey?: string) => createOpenAIModel({\n    model: 'o3',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  o3Mini: (apiKey?: string) => createOpenAIModel({\n    model: 'o3-mini',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};\n\nexport const anthropicModels = {\n  claude4Opus: (apiKey?: string) => createAnthropicModel({\n    model: 'claude-4-opus-20250514',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  claude4Sonnet: (apiKey?: string) => createAnthropicModel({\n    model: 'claude-4-sonnet-20250514',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};\n\nexport const googleModels = {\n  gemini25ProPreview: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-2.5-pro-preview-06-05',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gemini25FlashPreview: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-2.5-flash-preview-05-20',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gemini15Pro: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-1.5-pro',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gemini15Flash: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-1.5-flash',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};\n\nexport const googleVertexModels = {\n  gemini25ProPreview: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-2.5-pro-preview-06-05',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n  gemini25FlashPreview: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-2.5-flash-preview-05-20',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n  gemini15Pro: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-1.5-pro',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n  gemini15Flash: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-1.5-flash',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n};\n\nexport const perplexityModels = {\n  sonar: (apiKey?: string) => createPerplexityModel({\n    model: 'llama-3.1-sonar-small-128k-online',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  sonarLarge: (apiKey?: string) => createPerplexityModel({\n    model: 'llama-3.1-sonar-large-128k-online',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  sonarHuge: (apiKey?: string) => createPerplexityModel({\n    model: 'llama-3.1-sonar-huge-128k-online',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};\n\nexport const xaiModels = {\n  grok: (apiKey?: string) => createXAIModel({\n    model: 'grok-beta',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};\n\n// Legacy exports for backward compatibility\nexport const geminiModels = googleModels;\nexport const createGeminiModel = createGoogleModel;\n\n// Utility functions\nexport function getModelInfo(provider: string, model: string) {\n  const config = providerConfigs[provider as keyof typeof providerConfigs];\n  if (!config) {\n    throw new Error(`Unknown provider: ${provider}`);\n  }\n  \n  const modelInfo = config.models[model as keyof typeof config.models];\n  if (!modelInfo) {\n    throw new Error(`Unknown model: ${model} for provider: ${provider}`);\n  }\n  \n  return modelInfo;\n}\n\nexport function calculateCost(provider: string, model: string, inputTokens: number, outputTokens: number): number {\n  const modelInfo = getModelInfo(provider, model);\n  return (inputTokens * modelInfo.cost.input / 1000) + (outputTokens * modelInfo.cost.output / 1000);\n}\n\nexport function getAllModels() {\n  const allModels: Array<{ provider: string; model: string; info: any }> = [];\n  \n  Object.entries(providerConfigs).forEach(([provider, config]) => {\n    Object.entries(config.models).forEach(([model, info]) => {\n      allModels.push({ provider, model, info });\n    });\n  });\n  \n  return allModels;\n}"],"mappings":"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","names":[]}