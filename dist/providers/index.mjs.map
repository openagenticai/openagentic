{"version":3,"sources":["../../src/providers/openai.ts","../../src/providers/anthropic.ts","../../src/providers/google.ts","../../src/providers/perplexity.ts","../../src/providers/xai.ts","../../src/providers/custom.ts"],"sourcesContent":["import type { AIModel } from '../types';\n\nexport function createOpenAIModel(options: {\n  model: string;\n  apiKey?: string;\n  baseURL?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'openai',\n    model: options.model,\n    apiKey: options.apiKey || process.env.OPENAI_API_KEY,\n    baseURL: options.baseURL,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport const openAIModels = {\n  gpt4: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gpt4Turbo: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4-turbo',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gpt4o: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4o',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gpt4oMini: (apiKey?: string) => createOpenAIModel({\n    model: 'gpt-4o-mini',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  o3: (apiKey?: string) => createOpenAIModel({\n    model: 'o3',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  o3Mini: (apiKey?: string) => createOpenAIModel({\n    model: 'o3-mini',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};","import type { AIModel } from '../types';\n\nexport function createAnthropicModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'anthropic',\n    model: options.model,\n    apiKey: options.apiKey || process.env.ANTHROPIC_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens ?? 1024,\n    topP: options.topP,\n  };\n}\n\nexport const anthropicModels = {\n  claude4Opus: (apiKey?: string) => createAnthropicModel({\n    model: 'claude-4-opus-20250514',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  claude4Sonnet: (apiKey?: string) => createAnthropicModel({\n    model: 'claude-4-sonnet-20250514',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};","import type { AIModel } from '../types';\n\nexport function createGoogleModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'google',\n    model: options.model,\n    apiKey: options.apiKey || process.env.GOOGLE_GENERATIVE_AI_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport function createGoogleVertexModel(options: {\n  model: string;\n  project: string;\n  location?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'google-vertex',\n    model: options.model,\n    project: options.project,\n    location: options.location || 'us-central1',\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport const googleModels = {\n  gemini25ProPreview: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-2.5-pro-preview-06-05',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gemini25FlashPreview: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-2.5-flash-preview-05-20',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gemini15Pro: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-1.5-pro',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  gemini15Flash: (apiKey?: string) => createGoogleModel({\n    model: 'gemini-1.5-flash',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};\n\nexport const googleVertexModels = {\n  gemini25ProPreview: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-2.5-pro-preview-06-05',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n  gemini25FlashPreview: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-2.5-flash-preview-05-20',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n  gemini15Pro: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-1.5-pro',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n  gemini15Flash: (project: string, location?: string) => createGoogleVertexModel({\n    model: 'gemini-1.5-flash',\n    project,\n    ...(location !== undefined && { location }),\n  }),\n};","import type { AIModel } from '../types';\n\nexport function createPerplexityModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'perplexity',\n    model: options.model,\n    apiKey: options.apiKey || process.env.PERPLEXITY_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport const perplexityModels = {\n  sonar: (apiKey?: string) => createPerplexityModel({\n    model: 'llama-3.1-sonar-small-128k-online',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  sonarLarge: (apiKey?: string) => createPerplexityModel({\n    model: 'llama-3.1-sonar-large-128k-online',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n  sonarHuge: (apiKey?: string) => createPerplexityModel({\n    model: 'llama-3.1-sonar-huge-128k-online',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};","import type { AIModel } from '../types';\n\nexport function createXAIModel(options: {\n  model: string;\n  apiKey?: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'xai',\n    model: options.model,\n    apiKey: options.apiKey || process.env.XAI_API_KEY,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}\n\nexport const xaiModels = {\n  grok: (apiKey?: string) => createXAIModel({\n    model: 'grok-beta',\n    ...(apiKey !== undefined && { apiKey }),\n  }),\n};","import type { AIModel } from '../types';\n\nexport function createCustomModel(options: {\n  model: string;\n  apiKey?: string;\n  baseURL: string;\n  temperature?: number;\n  maxTokens?: number;\n  topP?: number;\n}): AIModel {\n  return {\n    provider: 'custom',\n    model: options.model,\n    apiKey: options.apiKey,\n    baseURL: options.baseURL,\n    temperature: options.temperature ?? 0.7,\n    maxTokens: options.maxTokens,\n    topP: options.topP,\n  };\n}"],"mappings":"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","names":[]}